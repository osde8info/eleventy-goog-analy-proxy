/*--------------------------------------------------------------
Breakpoints
--------------------------------------------------------------*/

@mixin bp-min($point) {
	@media only screen and (min-width: $point) { @content; }
}
@mixin bp-max($point) {
	@media only screen and (max-width: $point) { @content; }
}
@mixin bp-min-max($point1, $point2) {
	@media only screen and (min-width: $point1) and (max-width: $point2) { @content; }
}

/* Tablet: 640px */
/* Laptop: 1024px */
/* Desktop: 1440px */

@mixin bp-tablet {
	@media only screen and (min-width: 40em) { @content; }
}
@mixin bp-laptop {
	@media only screen and (min-width: 64em) { @content; }
}
@mixin max-bp-laptop {
	@media only screen and (max-width: 63.999em) { @content; }
}
@mixin bp-desktop {
	@media only screen and (min-width: 90em) { @content; }
}

/*--------------------------------------------------------------
Sizes
--------------------------------------------------------------*/

$maxContentWidth: 36rem;
$sidepadding: 2rem;

/*--------------------------------------------------------------
Fonts
--------------------------------------------------------------*/
@font-face {
    font-family: 'Playfair Display';
    src: url('/assets/fonts/playfairdisplay-bold.woff2') format('woff2'),
         url('/assets/fonts/playfairdisplay-bold.woff') format('woff');
    font-weight: 700;
    font-display: swap;
}
@font-face {
    font-family: 'Playfair Display';
    src: url('/assets/fonts/playfairdisplay-regular.woff2') format('woff2'),
         url('/assets/fonts/playfairdisplay-regular.woff') format('woff');
    font-weight: 400;
    font-display: swap;
}

$mainFont: -apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
$headingFont: 'Playfair Display', serif;

$baseFontWeight: 400;
$headingFontWeight: 700;

$baseFontSize: 18;
$baseLineHeight: 1.5;

/*--------------------------------------------------------------
Colors
--------------------------------------------------------------*/

$vars: (
	yellow: #ffc400,
	orange: #ff8010,
	lightgreen: #bbb514,
	darkgreen: #809433,
	lightblue: #408CFF,
	darkblue: #1072A3,
	lum-0: hsl(0, 0, 0%),
	lum-10: hsl(0, 0, 10%),
	lum-20: hsl(0, 0, 20%),
	lum-30: hsl(0, 0, 30%),
	lum-40: hsl(0, 0, 40%),
	lum-50: hsl(0, 0, 50%),
	lum-60: hsl(0, 0, 60%),
	lum-70: hsl(0, 0, 70%),
	lum-80: hsl(0, 0, 80%),
	lum-90: hsl(0, 0, 90%),
	lum-100: hsl(0, 0, 100%)
);
$vars-inv: (
	yellow: #ffc400,
	orange: #ff8010,
	lightgreen: #bbb514,
	darkgreen: #809433,
	lightblue: #408CFF,
	darkblue: #1072A3,
	lum-0: hsl(0, 0, 100%),
	lum-10: hsl(0, 0, 90%),
	lum-20: hsl(0, 0, 80%),
	lum-30: hsl(0, 0, 70%),
	lum-40: hsl(0, 0, 60%),
	lum-50: hsl(0, 0, 50%),
	lum-60: hsl(0, 0, 40%),
	lum-70: hsl(0, 0, 30%),
	lum-80: hsl(0, 0, 20%),
	lum-90: hsl(0, 0, 10%),
	lum-100: hsl(0, 0, 0%)
);

@mixin var($property, $varName) {
	#{$property}: map-get($vars, $varName);
	#{$property}: var(--#{$varName});
}
@mixin border($direction, $width, $style, $varName ) {
	border-#{$direction}: $width $style map-get($vars, $varName);
	border-#{$direction}: $width $style var(--#{$varName});
}

// Usage: @include var(background-color, primary);

/*
Presets
*/
%gradient-bg {
	background-color: map-get($vars, yellow);
	background-image: linear-gradient(135deg, map-get($vars, yellow) 0%, map-get($vars, orange) 100%);
	background-image: linear-gradient(135deg, var(--yellow) 0%, var(--orange) 100%);
}

%gradient-border-top {
	content: '';
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 4px;
	@extend %gradient-bg;
}

%gradient-border-bottom {
	content: '';
	position: absolute;
	left: 0;
	bottom: 0;
	width: 100%;
	height: 4px;
	@extend %gradient-bg;
}

%gradient-border-left {
	content: '';
	position: absolute;
	left: 0;
	top: 0;
	width: 4px;
	height: 100%;
	@extend %gradient-bg;
}

%gradient-border-right {
	content: '';
	position: absolute;
	right: 0;
	top: 0;
	width: 4px;
	height: 100%;
	@extend %gradient-bg;
}